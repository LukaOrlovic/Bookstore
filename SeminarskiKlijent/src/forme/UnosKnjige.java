/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Autor;
import domen.Knjiga;
import domen.PoreskaStopa;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import transfer.OdgovorServera;
import transfer.ZahtevKlijenta;
import ucitavanjeLista.KontrolerForma;

/**
 *
 * @author User
 */
public class UnosKnjige extends javax.swing.JDialog {

    Knjiga k;

    /**
     * Creates new form UnosKnjige
     */
    public UnosKnjige(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        combo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelNaziv = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabelZanr = new javax.swing.JLabel();
        txtZanr = new javax.swing.JTextField();
        jLabelCena = new javax.swing.JLabel();
        txtCena = new javax.swing.JTextField();
        jLabelAutor = new javax.swing.JLabel();
        cmbAutor = new javax.swing.JComboBox();
        jLabelStopa = new javax.swing.JLabel();
        cmbStope = new javax.swing.JComboBox();
        jButtonDodajKnjigu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelNaziv.setText("Naziv:");

        jLabelZanr.setText("Zanr: ");

        jLabelCena.setText("Cena:");

        jLabelAutor.setText("Autor:");

        cmbAutor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabelStopa.setText("Stopa:");

        cmbStope.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonDodajKnjigu.setText("Dodaj knjigu");
        jButtonDodajKnjigu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDodajKnjigu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajKnjiguActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelZanr)
                    .addComponent(jLabelCena)
                    .addComponent(jLabelAutor)
                    .addComponent(jLabelStopa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbAutor, 0, 166, Short.MAX_VALUE)
                    .addComponent(txtZanr)
                    .addComponent(txtCena)
                    .addComponent(cmbStope, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(185, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDodajKnjigu, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNaziv)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelZanr)
                    .addComponent(txtZanr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCena)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAutor)
                    .addComponent(cmbAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStopa)
                    .addComponent(cmbStope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButtonDodajKnjigu)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Dodavanje nove knjige");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDodajKnjiguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajKnjiguActionPerformed

        String naziv = txtNaziv.getText();
        String zanr = txtZanr.getText();
        double cena = Double.parseDouble(txtCena.getText());
        
        Autor a = (Autor) cmbAutor.getSelectedItem();
        PoreskaStopa ps = (PoreskaStopa) cmbStope.getSelectedItem();

        if (naziv.isEmpty() || zanr.isEmpty() || txtCena.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Niste dobro uneli.");
            return;
        }
        
        if(cena <=0){
            JOptionPane.showMessageDialog(this, "Cena ne sme biti jednaka, ili manja od 0.");
            return;
        }

        k = new Knjiga(-1, naziv, zanr, cena, a, ps);

        ZahtevKlijenta zh = new ZahtevKlijenta();
        zh.setOperacija(ZahtevKlijenta.SACUVAJ_KNJIGU);
        zh.setObjekatOperacije(k);



        try {

            ArrayList<Knjiga> knjige = KontrolerForma.getInstance().popuniListuKnjiga();
            for (Knjiga knjiga : knjige) {
                if (knjiga.getNazivKnjige().equals(k.getNazivKnjige()) && knjiga.getAutor().toString().equals(k.getAutor().toString())) {
                    JOptionPane.showMessageDialog(this, "Knjiga sa ovim autorom i cenom vec postoji.");
                    return;
                }
            }

            OdgovorServera os = (OdgovorServera) Komunikacija.vratiInstancu().requestSynch(zh);
            if (os.getSignal() == -1) {
                os.getIzuzetak();
                JOptionPane.showMessageDialog(this, "Sistem ne moze da sacuva knjigu.", "Kreiranje knjige.", JOptionPane.INFORMATION_MESSAGE);
            }

            JOptionPane.showMessageDialog(this, "Uspesno ste sacuvali knjigu", "Cuvanje knjige", JOptionPane.INFORMATION_MESSAGE);

            this.dispose();

            //aktivnost= new Aktivnost(polaznikKursa, -1, 0, 0, 0, tema, profesor);
        } catch (Exception ex) {
            Logger.getLogger(PocetnaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDodajKnjiguActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosKnjige.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UnosKnjige dialog = new UnosKnjige(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbAutor;
    private javax.swing.JComboBox cmbStope;
    private javax.swing.JButton jButtonDodajKnjigu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAutor;
    private javax.swing.JLabel jLabelCena;
    private javax.swing.JLabel jLabelNaziv;
    private javax.swing.JLabel jLabelStopa;
    private javax.swing.JLabel jLabelZanr;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtZanr;
    // End of variables declaration//GEN-END:variables

    private void combo() {

        k = new Knjiga();

        if (k != null) {
            JOptionPane.showMessageDialog(this, "Sistem je kreirao knjigu.", "Kreiranje knjige.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira knjigu.", "Kreiranje knjige.", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        ArrayList<Autor> autori = KontrolerForma.getInstance().popuniListuAutora();

        cmbAutor.removeAllItems();

        for (Autor a : autori) {
            cmbAutor.addItem(a);
        }

        ArrayList<PoreskaStopa> stope = KontrolerForma.getInstance().popuniListuStopa();

        cmbStope.removeAllItems();

        for (PoreskaStopa a : stope) {
            cmbStope.addItem(a);
        }
    }
}
